// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates AI use case ideas based on industry and business challenge.
 *
 * - generateAiUseCaseIdeas - A function that generates AI use case ideas.
 * - GenerateAiUseCaseIdeasInput - The input type for the generateAiUseCaseIdeas function.
 * - GenerateAiUseCaseIdeasOutput - The return type for the generateAiUseCaseIdeas function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateAiUseCaseIdeasInputSchema = z.object({
  industry: z.string().describe('The industry to generate AI use case ideas for.'),
  businessChallenge: z.string().describe('The business challenge to address with AI.'),
});
export type GenerateAiUseCaseIdeasInput = z.infer<
  typeof GenerateAiUseCaseIdeasInputSchema
>;

const GenerateAiUseCaseIdeasOutputSchema = z.object({
  ideas: z.array(
    z.string().describe('AI application ideas relevant to the selected industry.')
  ),
});
export type GenerateAiUseCaseIdeasOutput = z.infer<
  typeof GenerateAiUseCaseIdeasOutputSchema
>;

export type GenerateAiUseCaseIdeasResult = GenerateAiUseCaseIdeasOutput | { ideas: [], error: string };

export async function generateAiUseCaseIdeas(
  input: GenerateAiUseCaseIdeasInput
): Promise<GenerateAiUseCaseIdeasResult> {
  try {
    const output = await generateAiUseCaseIdeasFlow(input);
    if (!output?.ideas) {
       return { ideas: [], error: "The AI model did not return valid ideas." };
    }
    return output;
  } catch (e: any) {
    console.error(`Error in generateAiUseCaseIdeas Genkit flow: ${e.message}`);
    return {
      ideas: [],
      error: e.message || "An unexpected error occurred while generating use case ideas."
    };
  }
}

const prompt = ai.definePrompt({
  name: 'generateAiUseCaseIdeasPrompt',
  input: {schema: GenerateAiUseCaseIdeasInputSchema},
  output: {schema: GenerateAiUseCaseIdeasOutputSchema},
  prompt: `You are an AI expert specializing in generating AI use case ideas for various industries.

You will use the industry and business challenge provided to generate 1-2 concise AI application ideas.

Industry: {{{industry}}}
Business Challenge: {{{businessChallenge}}}

AI Application Ideas:
`,
});

const generateAiUseCaseIdeasFlow = ai.defineFlow(
  {
    name: 'generateAiUseCaseIdeasFlow',
    inputSchema: GenerateAiUseCaseIdeasInputSchema,
    outputSchema: GenerateAiUseCaseIdeasOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
